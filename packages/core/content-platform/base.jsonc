{
  // This should be automatically updated and point to Schema Registry.
  "$id": "https://vtex.vtexcommercestable.com.br/api/content-platform/schemas/vtex/faststore",
  // This should always point to CP's meta-schema for Stores.
  // "$schema": "https://vtex.vtexcommercestable.com.br/api/content-platform/schemas/meta-schema",
  "title": "FastStore Schema",
  "description": "Collection of default schemas for FastStore.",
  "contexts": {},
  "uiSchema": {
    "content-types.home.sections": {
      "ui:options": {
        "expandOnSidebar": true
      }
    }
  },
  "components": {
    "base-component": {
      "properties": {
        "$componentKey": {
          "type": "string"
        },
        "$componentTitle": {
          "type": "string"
        }
      },
      "required": ["$componentKey"]
    },
    "base-dynamic-area": {
      "$extends": ["#/components/base-component"],
      "properties": {
        "sections": {
          "items": {
            "$ref": "#/components/base-component"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "base-page-template": {
      "$extends": ["#/components/base-dynamic-area"],
      "properties": {
        "slug": {
          "type": "string"
        }
      },
      "type": "object"
    },
    // `core.children` is not assigned to any specific React component.
    // Instead, it's used as a "splitter" to orient the rendering process.
    "Children": {
      "$extends": ["#/components/base-component"],
      "$componentKey": "Children",
      "description": "Children",
      "type": "object",
      "properties": {
        "name": {
          "const": "Children"
        },
        "data": {
          "properties": {}
        }
      }
    },
    // `SEO` is also not assigned to any specific React component.
    // It serves as a way to define SEO options for a given page.
    "SEO": {
      "$extends": ["#/components/base-component"],
      "$componentKey": "SEO",
      "$componentTitle": "SEO",
      "type": "object",
      "properties": {
        "options": {
          "type": "string",
          "enum": ["index", "noindex"]
        },
        "cacheExpiresIn": {
          "type": "number"
        },
        "icon": {
          "title": "Icon",
          "enum": ["MagnifyingGlass", "LockKeyOpen", "Megaphone", "MapPin"],
          "type": "string",
          "default": "MagnifyingGlass"
        },
        "mediaGallery": {
          "widget": {
            "ui:widget": "media-gallery"
          },
          "title": "Media",
          "type": "string"
        },
        "data": {
          "properties": {
            "title": {
              "title": "Default page title",

              "type": "string",
              "description": "Display this title when no other tile is available",
              "default": "FastStore Starter"
            },
            "description": {
              "title": "Meta tag description",

              "type": "string",
              "default": "A beautifully designed store"
            },
            "canonical": {
              "title": "Canonical url for the page",

              "type": "string"
            }
          },
          "required": ["title", "description"],
          "type": "object"
        }
      }
    },
    // `core.search` serves as a configuration holder.
    "Search": {
      "$componentKey": "Search",
      "$componentTitle": "Search Bar Configuration",
      "$extends": ["#/components/base-component"],
      "description": "Search Bar Configuration",
      "properties": {
        "properties": {
          "searchInput": {
            "title": "Input Field",
            "type": "object",
            "properties": {
              "placeholder": {
                "title": "Placeholder",
                "type": "string",
                "default": "Search Everything at the Store"
              },
              "icon": {
                "title": "Search Icon",
                "type": "object",
                "properties": {
                  "icon": {
                    "title": "Icon",
                    "type": "string",
                    "enumNames": ["Magnifying Glass"],
                    "enum": ["MagnifyingGlass"],
                    "default": "MagnifyingGlass"
                  },
                  "alt": {
                    "title": "Alternative Label",
                    "type": "string",
                    "default": "Magnifying Glass"
                  }
                }
              }
            }
          },
          "searchHistory": {
            "title": "Search History",
            "type": "object",
            "properties": {
              "title": {
                "title": "Title",
                "type": "string",
                "default": "History"
              },
              "clearButtonLabel": {
                "type": "string",
                "title": "Clear Button Label",
                "default": "Clear History"
              },
              "icon": {
                "title": "Icon",
                "type": "object",
                "properties": {
                  "icon": {
                    "title": "Icon",
                    "type": "string",
                    "enumNames": ["Clock Clockwise"],
                    "enum": ["ClockClockwise"],
                    "default": "ClockClockwise"
                  },
                  "alt": {
                    "type": "string",
                    "title": "Alternative Label",
                    "default": "History"
                  }
                }
              },
              "maxItems": {
                "title": "Maximum Number of History Items",
                "type": "integer",
                "default": 5
              }
            }
          },
          "searchTop": {
            "title": "Top Search",
            "type": "object",
            "properties": {
              "title": {
                "title": "Title",
                "type": "string",
                "default": "Top Search"
              },
              "maxItems": {
                "title": "Maximum Number of Top Search Items",
                "type": "integer",
                "default": 5
              }
            }
          },
          "searchAutocomplete": {
            "title": "Autocomplete",
            "type": "object",
            "properties": {
              "icon": {
                "title": "Icon",
                "type": "object",
                "properties": {
                  "icon": {
                    "title": "Icon",
                    "type": "string",
                    "enumNames": ["Magnifying Glass"],
                    "enum": ["MagnifyingGlass"]
                  },
                  "alt": {
                    "type": "string",
                    "title": "Alternative Label",
                    "default": "Magnifying Glass"
                  }
                }
              },
              "maxItems": {
                "title": "Maximum Number of Autocomplete Items",
                "type": "integer",
                "default": 5
              }
            }
          },
          "searchProducts": {
            "title": "Suggested Products",
            "type": "object",
            "properties": {
              "title": {
                "title": "Title",
                "type": "string",
                "default": "Suggested Products"
              },
              "maxItems": {
                "title": "Maximum Number of Suggested Products",
                "type": "integer",
                "default": 5
              }
            }
          }
        }
      },
      "required": [
        "searchInput",
        "searchHistory",
        "searchTop",
        "searchAutocomplete"
      ]
    }
  },
  "content-types": {
    "globalSections": {
      "$extends": ["#/components/base-dynamic-area"],
      "$singleton": true,
      "title": "Global Sections"
    },
    "globalHeaderSections": {
      "title": "Global Header Sections",
      "$singleton": true,
      "$extends": ["#/components/base-dynamic-area"]
    },
    "globalFooterSections": {
      "title": "Global Footer Sections",
      "$singleton": true,
      "$extends": ["#/components/base-dynamic-area"]
    }
  }
}
