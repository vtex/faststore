/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
}

// Operation related types
export type DefaultCurrencyQueryQueryVariables = Exact<{ [key: string]: never }>

export type DefaultCurrencyQueryQuery = {
  allChannel: { edges: Array<{ node: { defaultCurrency: Maybe<string> } }> }
}

// Query Related Code

export const DefaultCurrencyQuery = {
  query:
    'query DefaultCurrencyQuery {\n  allChannel(filter: {targetProduct: {eq: "vtex-storefront"}}, limit: 1) {\n    edges {\n      node {\n        defaultCurrency\n      }\n    }\n  }\n}\n',
  sha256Hash:
    '7adae2e23aae06db92fa039faf12eaf1fefd6584dc1940be89c2663a7a634133',
  operationName: 'DefaultCurrencyQuery',
}
