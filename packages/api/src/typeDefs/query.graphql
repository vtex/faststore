type StoreProductEdge {
  node: StoreProduct!
  cursor: String!
}

type StoreProductConnection {
  pageInfo: StorePageInfo!
  edges: [StoreProductEdge!]!
}

type StoreCollectionEdge {
  node: StoreCollection!
  cursor: String!
}

type StoreCollectionConnection {
  pageInfo: StorePageInfo!
  edges: [StoreCollectionEdge!]!
}

enum StoreSort {
  price_desc
  price_asc
  orders_desc
  name_desc
  name_asc
  release_desc
  discount_desc
  score_desc
}

input IStoreSelectedFacet {
  key: String!
  value: String!
}

enum StoreFacetType {
  BOOLEAN
  RANGE
}

type StoreSearchResult {
  products: StoreProductConnection!
  facets: [StoreFacet!]!
}

type Query {
  product(locator: [IStoreSelectedFacet!]!): StoreProduct!

  collection(slug: String!): StoreCollection!

  search(
    first: Int!
    after: String
    sort: StoreSort = score_desc
    term: String = ""
    selectedFacets: [IStoreSelectedFacet!]
  ): StoreSearchResult!

  allProducts(first: Int!, after: String): StoreProductConnection!

  allCollections(first: Int!, after: String): StoreCollectionConnection!
}
