
/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
  ID: string
}

// Operation related types
export type SearchSeoQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type SearchSeoQueryQuery = { site: Maybe<{ siteMetadata: Maybe<{ title: Maybe<string>, siteUrl: Maybe<string>, description: Maybe<string>, author: Maybe<string> }> }> };


// Query Related Code

export const SearchSEOQuery = {
  query: "query SearchSEOQuery {\n  site {\n    siteMetadata {\n      title\n      siteUrl\n      description\n      author\n    }\n  }\n}\n",
  sha256Hash: "9eed5266422bfd24b8d490e8f8303d86adcfc144308705b83eb440f9a358bca0",
  operationName: "SearchSEOQuery",
}

